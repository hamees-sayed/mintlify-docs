openapi: 3.0.1
info:
  title: Get Voices
  description: |
    API Endpoint to get voices supported by our models.
    Currently featuring our two models, Lightning & Lightning Large, with more models coming soon.
  version: 1.0.0
servers:
  - url: https://waves-api.smallest.ai
    description: Waves API server

paths:
  /api/v1/{model}/get_voices:
    get:
      summary: Get Voices
      description: Fetch voices for a given model.
      operationId: getWavesVoices
      parameters:
        - in: path
          name: model
          required: true
          schema:
            type: string
            enum: [lightning, lightning-large]
          description: The model to use for speech synthesis.
      responses:
        '200':
          description: Voices retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  voices:
                    type: array
                    description: List of available voices.
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Unique identifier for the voice document.
                          example: "6718a3981d24244952896cae"
                        voiceId:
                          type: string
                          description: Voice identifier.
                          example: "william"
                        displayName:
                          type: string
                          description: Display name of the voice.
                          example: "William"
                        description:
                          type: string
                          description: A brief description of the voice.
                          example: "Professional, podcast, male voice"
                        avatar:
                          type: string
                          description: Avatar image for the voice.
                          example: "-"
                        audioPreview:
                          type: string
                          description: URL to the audio preview of the voice.
                          example: "https://d4a5s42qh2351.cloudfront.net/waves-audio-previews/william.wav"
                        tags:
                          type: array
                          description: Tags associated with the voice.
                          items:
                            type: string
                            example: "professional"
                        __v:
                          type: integer
                          description: Versioning number for the voice document.
                          example: 0
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error type
                  message:
                    type: string
                    description: Error message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error type
                  message:
                    type: string
                    description: Error message
        '500':
          description: Server error occurred
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error type
                  message:
                    type: string
                    description: Error message
      security:
        - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
